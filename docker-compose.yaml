
## Author = Bhuvaneshwar_Hariharan

services:

  mysqlc:
    image: mysql:8.0
    container_name: mysqlc
    environment:
      - MYSQL_ROOT_PASSWORD=pass123
     
    volumes:
      - data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      
    ports:
      - "3306:3306"
    networks:
      - public
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  ecom-eureka-server:
    image: steeltoeoss/eureka-server
    container_name: ecom-eureka-server
    environment:
      - spring.application.name=ecom-eureka-server
      - server.port=8761
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
      - eureka.client.service-url.defaultZone=http://ecom-eureka-server:8761/eureka
    ports:
      - "8761:8761"
    networks:
      - public
    depends_on:
      mysqlc:
        condition: service_healthy

  user-service:
    image: haribhuvan/app:user_ms
    container_name: user-service
    environment:
      - spring.application.name=user-service
      - server.port=8081
      - spring.datasource.url=jdbc:mysql://mysqlc:3306/user_ms
      - spring.datasource.username=myuser
      - spring.datasource.password=mypassword
      - server.shutdown=graceful
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://ecom-eureka-server:8761/eureka
    ports:
      - "8081:8081"
    networks:
      - public
    depends_on:
      ecom-eureka-server:
        condition: service_started
      mysqlc:
        condition: service_healthy
    

  
  product-service:
    image: haribhuvan/app:product_ms
    container_name: product-service
    environment:
      - spring.application.name=product-service
      - server.port=8082
      - spring.datasource.url=jdbc:mysql://mysqlc:3306/product_ms
      - spring.datasource.username=myuser
      - spring.datasource.password=mypassword
      - server.shutdown=graceful
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://ecom-eureka-server:8761/eureka
    ports:
      - "8082:8082"
    networks:
      - public
    depends_on:
      ecom-eureka-server:
        condition: service_started
      mysqlc:
        condition: service_healthy
      user-service:
        condition: service_started
   

  order-service:
    image: haribhuvan/app:order_ms
    container_name: order-service
    environment:
      - spring.application.name=order-service
      - server.port=8083
      - spring.datasource.url=jdbc:mysql://mysqlc:3306/order_ms
      - spring.datasource.username=myuser
      - spring.datasource.password=mypassword
      - server.shutdown=graceful
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://ecom-eureka-server:8761/eureka
    ports:
      - "8083:8083"
    networks:
      - public
    depends_on:
      ecom-eureka-server:
        condition: service_started
      mysqlc:
        condition: service_healthy
      user-service:
        condition: service_started
      product-service:
        condition: service_started
  

  payment-service:
    image: haribhuvan/app:payment_ms
    container_name: payment-service
    environment:
      - spring.application.name=payment-service
      - server.port=8084
      - spring.datasource.url=jdbc:mysql://mysqlc:3306/payment_service
      - spring.datasource.username=myuser
      - spring.datasource.password=mypassword
      - server.shutdown=graceful
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.show-sql=true
      - eureka.client.register-with-eureka=true
      - eureka.client.fetch-registry=true
      - eureka.client.service-url.defaultZone=http://ecom-eureka-server:8761/eureka
      - razorpay.key.id= #  razor pay key id
      - razorpay.key.secret= #razor pay key secret
    ports:
      - "8084:8084"
    networks:
      - public
    depends_on:
      ecom-eureka-server:
        condition: service_started
      mysqlc:
        condition: service_healthy
      user-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started
   
volumes:
  data:

networks:
  public:
    driver: bridge
